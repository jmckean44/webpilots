---
import type { ImageMetadata } from 'astro';
import { getImage } from 'astro:assets';

interface Props {
	mobileImgUrl: string | ImageMetadata;
	desktopImgUrl: string | ImageMetadata;
	className: string;
	loading: string;
	alt: string;
	quality?: number;
}

const { mobileImgUrl, desktopImgUrl, className, loading, alt, quality } = Astro.props;

const mobileImgWebp = await getImage({
	src: mobileImgUrl,
	format: 'webp',
	quality,
});

const mobileImgAvif = await getImage({
	src: mobileImgUrl,
	format: 'avif',
	quality,
});

const desktopImgWebp = await getImage({
	src: desktopImgUrl,
	format: 'webp',
	quality,
});

const desktopImgAvif = await getImage({
	src: desktopImgUrl,
	format: 'avif',
	quality,
});
---

<picture>
	<source type="image/avif" media="(max-width: 800px)" srcset={mobileImgAvif.src} />
	<source type="image/webp" media="(max-width: 800px)" srcset={mobileImgWebp.src} />
	<source type="image/avif" media="(min-width: 801px)" srcset={desktopImgAvif.src} />
	<source type="image/webp" media="(min-width: 801px)" srcset={desktopImgWebp.src} />
	<img src={desktopImgWebp.src} class={className} loading={loading as 'eager' | 'lazy'} alt={alt} width={desktopImgWebp.attributes.width} height={desktopImgWebp.attributes.height} />
</picture>
